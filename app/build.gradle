import com.eillia.ehya.buildsrc.Libs

plugins {
  id 'com.android.application'
  id 'com.google.gms.google-services'
  id 'com.google.firebase.crashlytics'
  id 'kotlin-android'
  id 'kotlin-kapt'
  id 'dagger.hilt.android.plugin'
}

def keystoreProperties = new Properties()

def keystorePropertiesFilePath = System.getenv('EHYA_KEY_STORE_PROPERTIES')
if (keystorePropertiesFilePath) {
  def keystorePropertiesFile = file(keystorePropertiesFilePath)
  keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
  // Load default debug properties
  def debugKeystorePropertiesFile = rootProject.file("./debug-keystore.properties")
  keystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))
}

android {
  compileSdkVersion 33

  defaultConfig {
    applicationId "com.eillia.ehya"
    minSdkVersion 21
    targetSdkVersion 33
    versionCode 28
    versionName "2.1.4"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    kapt {
      arguments {
        arg("room.schemaLocation", "$projectDir/schemas")
      }
    }
  }

  signingConfigs {
    release {
      storeFile file(keystoreProperties['keystoreFile'])
      storePassword keystoreProperties['keystorePassword']
      keyAlias = keystoreProperties['keyAlias']
      keyPassword = keystoreProperties['keyPassword']
    }
    debug {
      storeFile file(keystoreProperties['keystoreFile'])
      storePassword keystoreProperties['keystorePassword']
      keyAlias = keystoreProperties['keyAlias']
      keyPassword = keystoreProperties['keyPassword']
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }
    release {
      signingConfig signingConfigs.release
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  buildFeatures {
    compose true
  }

  composeOptions {
    kotlinCompilerExtensionVersion Libs.AndroidX.Compose.version
  }

  packagingOptions {
    resources {
      excludes += '/META-INF/{AL2.0,LGPL2.1}'
    }
  }

  lintOptions {
    abortOnError false
  }

  applicationVariants.all { variant ->
    variant.outputs.all {
      def versionCode = variant.versionCode
      def versionName = variant.versionName
      outputFileName = "Ehya-${versionName}(${versionCode}).apk"
    }
  }
}

dependencies {
  implementation Libs.Kotlin.stdlib
  implementation Libs.AndroidX.coreKtx
  implementation Libs.AndroidX.Activity.activityKtx

  // ViewModel
  implementation Libs.AndroidX.ViewModel.runtimeKtx
  implementation Libs.AndroidX.ViewModel.viewModelKtx
  implementation Libs.AndroidX.ViewModel.livedataKtx

  // Compose
  implementation Libs.AndroidX.Compose.runtime
  implementation Libs.AndroidX.Compose.hiltNavigation
  implementation Libs.AndroidX.Compose.runtimeLivedata
  implementation Libs.AndroidX.Compose.foundation
  implementation Libs.AndroidX.Compose.layout
  implementation Libs.AndroidX.Compose.material
  implementation Libs.AndroidX.Compose.materialIconsExtended
  implementation Libs.AndroidX.Compose.materialIconsCore
  implementation Libs.AndroidX.Compose.ui
  implementation Libs.AndroidX.Compose.tooling

  // Compose ViewModel
  implementation Libs.AndroidX.Activity.activityCompose
  implementation Libs.AndroidX.Lifecycle.viewModelCompose

  // Timber
  implementation Libs.Timber.timber

  // Accompanist
  implementation Libs.Accompanist.insets
  implementation Libs.Accompanist.systemUiController

  // Room
  implementation Libs.AndroidX.Room.roomKtx
  implementation Libs.AndroidX.Room.runtime
  kapt Libs.AndroidX.Room.compiler

  // Dagger Hilt
  implementation Libs.Hilt.daggerHilt
  kapt Libs.Hilt.hiltCompiler
  implementation Libs.Hilt.hiltViewModel

  // Kotlin Coroutines
  implementation Libs.Kotlin.Coroutines.android
  implementation Libs.Kotlin.Coroutines.core

  // WorkManager
  implementation Libs.AndroidX.WorkManager.runtimeKtx

  // Gson
  implementation Libs.Gson.gson

  // Navigation
  implementation Libs.AndroidX.Navigation.compose

  // Play
  implementation Libs.Play.coreKtx

  // Firebase
  implementation platform(Libs.Firebase.bom)
  implementation Libs.Firebase.fcm
  implementation Libs.Firebase.analytics
  implementation Libs.Firebase.crashlytics

  // Testing
  androidTestImplementation Libs.AndroidX.Test.core
  androidTestImplementation Libs.AndroidX.Test.junitRunner
  androidTestImplementation Libs.AndroidX.Test.junitRules
  androidTestImplementation Libs.AndroidX.Test.extJunit
  androidTestImplementation Libs.AndroidX.Test.extTruth
  testImplementation Libs.JUnit.junit
}
