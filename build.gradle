/*
 * Copyright 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.eillia.ehya.buildsrc.Libs
import com.eillia.ehya.buildsrc.Versions

buildscript {
  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath Libs.androidGradlePlugin
    classpath Libs.Kotlin.gradlePlugin
    classpath Libs.Hilt.daggerHiltPlugin
    classpath Libs.Firebase.gmsPlugin
    classpath Libs.Firebase.crashlyticsPlugin
  }
}

plugins {
  id 'com.diffplug.spotless' version '5.14.2'
}

subprojects {
  repositories {
    google()
    mavenCentral()
  }

  apply plugin: 'com.diffplug.spotless'
  spotless {
    kotlin {
      target '**/*.kt'
      targetExclude("$buildDir/**/*.kt")
      targetExclude('bin/**/*.kt')
      trimTrailingWhitespace()
      ktlint(Versions.ktlint).userData(['android': 'true', 'indent_size': '2', 'continuation_indent_size': '4'])
      licenseHeaderFile rootProject.file('spotless/copyright.kt')
    }
    kotlinGradle {
      target '*.gradle.kts'
      trimTrailingWhitespace()
      ktlint(Versions.ktlint).userData(['android': 'true', 'indent_size': '2', 'continuation_indent_size': '4'])
      licenseHeaderFile rootProject.file('spotless/copyright.kts'), '(^(?![\\/ ]\\*).*$)'
    }
    format 'kts', {
      target '**/*.kts'
      targetExclude("$buildDir/**/*.kts")
      licenseHeaderFile rootProject.file('spotless/copyright.kts'), '(^(?![\\/ ]\\*).*$)'
    }
    format 'xml', {
      target '**/*.xml'
      targetExclude("$buildDir/**/*.xml")
      licenseHeaderFile rootProject.file('spotless/copyright.xml'), '(<[^!?])'
    }
    format 'misc', {
      // define the files to apply `misc` to
      target '*.gradle', '*.md', '.gitignore'

      // define the steps to apply to those files
      trimTrailingWhitespace()
      indentWithTabs(2)
      endWithNewline()
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
      // Treat all Kotlin warnings as errors (disabled by default)
      allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

      freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'

      // Enable experimental coroutines APIs, including Flow
      freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
      freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.FlowPreview'
      freeCompilerArgs += '-Xopt-in=kotlin.Experimental'

      // Set JVM target to 1.8
      jvmTarget = "1.8"
    }
  }
}
